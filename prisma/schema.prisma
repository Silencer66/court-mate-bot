// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CourtType {
  HARD
  CLAY
  GRASS
}

model Player {
  id                    BigInt   @id
  username              String?
  firstName             String
  lastName              String?
  languageCode          String? // ru, en, etc.
  isBot                 Boolean  @default(false)
  isPremium             Boolean? // Telegram Premium
  addedToAttachmentMenu Boolean? // Can attach files
  ntrp                  Float? // Рейтинг NTRP от 1.0 до 7.0
  district              String? // Район проживания
  preferredCourtTypes   String[] @default([])
  availability          String[] @default([])
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("players")
}

model Game {
  id               Int      @id @default(autoincrement())
  creatorId        BigInt
  channelChatId    BigInt?
  channelMessageId Int?
  title            String?
  description      String?
  location         String?
  startsAt         DateTime
  maxPlayers       Int?
  photoFileId      String?
  levelHint        String?
  isCancelled      Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  signups GameSignup[]

  @@map("games")
}

model GameSignup {
  id        Int      @id @default(autoincrement())
  gameId    Int
  playerId  BigInt
  status    String   @default("JOINED") // JOINED | CANCELLED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  game Game @relation(fields: [gameId], references: [id])

  @@unique([gameId, playerId])
  @@map("game_signups")
}
