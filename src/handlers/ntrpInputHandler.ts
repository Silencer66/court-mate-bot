import { Context } from "telegraf";
import { PlayerService } from "../services/playerService";
import { validateNTRPRating } from "../services/ntrpService";

const playerService = new PlayerService();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ NTRP —Ä–µ–π—Ç–∏–Ω–≥–∞
export async function handleNTRPInput(ctx: Context) {
    const telegramId = ctx.from?.id;
    if (!telegramId) {
        return ctx.reply("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    }

    const message =
        ctx.message && "text" in ctx.message ? ctx.message.text : undefined;
    if (!message) {
        return ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥ NTRP");
    }

    // –ü–∞—Ä—Å–∏–º —Ä–µ–π—Ç–∏–Ω–≥
    const rating = parseFloat(message);

    if (isNaN(rating)) {
        return ctx.reply(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.5, 3.0, 4.5)"
        );
    }

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    if (!validateNTRPRating(rating)) {
        return ctx.reply(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥!

–†–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1.0 –¥–æ 7.0 —Å —à–∞–≥–æ–º 0.5.

–ü—Ä–∏–º–µ—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤:
‚Ä¢ 1.0, 1.5, 2.0, 2.5, 3.0, 3.5
‚Ä¢ 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:`);
    }

    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await playerService.updatePlayerNTRP(BigInt(telegramId), {
            ntrp: rating,
        });

        const successMessage = `‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à —Ä–µ–π—Ç–∏–Ω–≥ NTRP: ${rating}

–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –ø–æ–∫—Ä—ã—Ç–∏—è–º –∫–æ—Ä—Ç–æ–≤.`;

        const keyboard = {
            inline_keyboard: [
                [
                    {
                        text: "üèüÔ∏è –•–∞—Ä–¥ (–•–∞—Ä–¥)",
                        callback_data: "court_type_HARD",
                    },
                    {
                        text: "üèüÔ∏è –ì—Ä—É–Ω—Ç (CLAY)",
                        callback_data: "court_type_CLAY",
                    },
                ],
                [
                    {
                        text: "üèüÔ∏è –¢—Ä–∞–≤–∞ (GRASS)",
                        callback_data: "court_type_GRASS",
                    },
                ],
                [
                    {
                        text: "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä",
                        callback_data: "finish_court_selection",
                    },
                ],
            ],
        };

        return ctx.reply(successMessage, { reply_markup: keyboard });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ NTRP —Ä–µ–π—Ç–∏–Ω–≥–∞:", error);
        return ctx.reply(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        );
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
export async function handleCancelManualInput(ctx: Context) {
    const message = `üéæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Court Mate Bot!

–ü–æ–º–æ–≥–∏ –Ω–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ NTRP –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ –∏–≥—Ä–µ.`;

    const keyboard = {
        inline_keyboard: [
            [
                {
                    text: "üìä –£–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ NTRP",
                    callback_data: "set_ntrp_manual",
                },
                {
                    text: "üìù –ü—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–π –æ–ø—Ä–æ—Å",
                    callback_data: "start_ntrp_survey",
                },
            ],
        ],
    };

    return ctx.reply(message, { reply_markup: keyboard });
}
